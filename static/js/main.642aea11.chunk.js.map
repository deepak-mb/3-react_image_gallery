{"version":3,"sources":["components/layout/Navbar.js","components/layout/PixabayImages.js","components/layout/UnsplashImages.js","components/layout/Loading.js","components/layout/Images.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","href","PixabayImages","props","pixabayImages","id","map","image","largeImageURL","target","key","uuid","rel","src","webformatURL","alt","userImageURL","user","UnsplashImages","unsplashImages","urls","regular","small","profile_image","medium","name","Loading","Images","state","searchQuery","unsplashAPIResult","pixabayAPIResult","count","start","totalHits","onChange","e","preventDefault","_this","setState","Object","defineProperty","value","onSubmit","trim","split","join","axios","get","concat","process","then","response","data","results","_this$state","status","images","hits","console","log","alert","fetchData","newStart","this","type","placeholder","aria-label","maxLength","lib_default","dataLength","length","next","hasMore","loader","endMessage","style","textAlign","layout_UnsplashImages","layout_PixabayImages","Component","App","layout_Navbar","layout_Images","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.642aea11.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <a className=\"navbar-brand\" href=\"#!\">\n        Image Search\n      </a>\n      {/* <form className=\"form-inline my-2 my-lg-0 ml-md-auto search-form\">\n        <input\n          className=\"form-control mr-sm-2\"\n          type=\"search\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n        />\n        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">\n          Search\n        </button>\n      </form> */}\n      {/* <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <form className=\"form-inline my-2 my-lg-0 ml-auto\">\n          <input\n            className=\"form-control mr-sm-2\"\n            type=\"search\"\n            placeholder=\"Search\"\n            aria-label=\"Search\"\n          />\n          <button\n            className=\"btn btn-outline-success my-2 my-sm-0\"\n            type=\"submit\"\n          >\n            Search\n          </button>\n        </form>\n      </div> */}\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./image.css\";\nimport uuid from \"uuid\";\n// import defaultImage from \"../../images/download.jpeg\";\n\nconst PixabayImages = props => {\n  const { pixabayImages } = props;\n  // console.log(props);\n  return (\n    <div className=\"image-inner-container\" id=\"photos\">\n      {pixabayImages.map(image => (\n        <a\n          href={image.largeImageURL}\n          target=\"_blank\"\n          className=\"anch\"\n          key={uuid()}\n          rel=\"noopener noreferrer\"\n        >\n          <img src={image.webformatURL} alt=\"\" className=\"\" key={uuid()} />\n          <div className=\"overlay\">\n            <div className=\"text\">\n              <img\n                src={image.userImageURL}\n                alt=\"Profile pic\"\n                className=\"profile-picture\"\n              />\n              <p className=\"user-name\">{image.user}</p>\n            </div>\n          </div>\n        </a>\n      ))}\n    </div>\n  );\n};\n\nexport default PixabayImages;\n","import React from \"react\";\nimport \"./image.css\";\nimport uuid from \"uuid\";\n\nconst UnsplashImages = props => {\n  // console.log(props);\n  const { unsplashImages } = props;\n  return (\n    <div className=\"image-inner-container\" id=\"photos\">\n      {unsplashImages.map(image => (\n        <a\n          href={image.urls.regular}\n          target=\"_blank\"\n          className=\"anch\"\n          key={image.id}\n          rel=\"noopener noreferrer\"\n        >\n          <img src={image.urls.small} alt=\"\" className=\"\" key={uuid()} />\n          <div className=\"overlay\">\n            <div className=\"text\">\n              <img\n                src={image.user.profile_image.medium}\n                alt=\"Profile pic\"\n                className=\"profile-picture\"\n              />\n              <p className=\"user-name\">{image.user.name}</p>\n            </div>\n          </div>\n        </a>\n      ))}\n    </div>\n  );\n};\n\nexport default UnsplashImages;\n","import React from \"react\";\nimport \"../../images/loading.svg\";\n\nexport default function Loading() {\n  return <img src=\"loading.svg\" alt=\"\" />;\n}\n","import React, { Component } from \"react\";\nimport PixabayImages from \"./PixabayImages\";\nimport UnsplashImages from \"./UnsplashImages\";\nimport axios from \"axios\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport Loading from \"./Loading\";\n// console.log(process.env.REACT_APP_PIXABAY_API_KEY);\n\nclass Images extends Component {\n  state = {\n    searchQuery: \"\",\n    unsplashAPIResult: [],\n    pixabayAPIResult: [],\n    count: 20,\n    start: 1,\n    totalHits: \"\"\n  };\n\n  onChange = e => {\n    e.preventDefault();\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  onSubmit = e => {\n    e.preventDefault();\n    //Unsplash API\n    let { searchQuery } = this.state;\n    searchQuery = searchQuery\n      .trim()\n      .split(\" \")\n      .join(\"+\");\n    // console.log(searchQuery);\n    if (searchQuery) {\n      axios\n        .get(\n          `https://api.unsplash.com/search/photos/?client_id=${\n            process.env.REACT_APP_UNSPLASH_API_KEY\n          }&query=${this.state.searchQuery}&per_page=50&order_by=popular`\n        )\n        .then(response => {\n          this.setState({\n            unsplashAPIResult: response.data.results\n          });\n          // console.log(this.state.unsplashAPIResult);\n        });\n\n      // Pixabay API\n      let { searchQuery, start, count } = this.state;\n      axios\n        .get(\n          `https://pixabay.com/api/?key=${\n            process.env.REACT_APP_PIXABAY_API_KEY\n          }&q=${searchQuery}&image_type=photo&pretty=true&safesearch=true&order=popular&per_page=${count}&page=${start}`\n        )\n        .then(response => {\n          if (response.status === 200) {\n            const images = response.data.hits;\n            this.setState({\n              pixabayAPIResult: images,\n              totalHits: response.data.totalHits\n            });\n            // console.log(this.state.pixabayAPIResult);\n          } else {\n            console.log(\"Something went wrong.\");\n          }\n        });\n    } else {\n      alert(\"Please enter a search item.\");\n    }\n  };\n\n  fetchData = () => {\n    let oldStart = this.state.start;\n    let newStart = oldStart + 1;\n    this.setState({ start: newStart, count: this.state.count + 20 });\n    axios\n      .get(\n        `https://pixabay.com/api/?key=${\n          process.env.REACT_APP_PIXABAY_API_KEY\n        }&q=${\n          this.state.searchQuery\n        }&image_type=photo&pretty=true&safesearch=true&order=popular&per_page=20&page=${\n          this.state.start\n        }`\n      )\n      .then(response => {\n        if (response.status === 200) {\n          this.setState({\n            pixabayAPIResult: this.state.pixabayAPIResult.concat(\n              response.data.hits\n            )\n          });\n        } else {\n          console.log(\"Something went wrong.\");\n        }\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"px-3\">\n        <form\n          onSubmit={this.onSubmit}\n          className=\"form-inline my-2 my-lg-0 ml-md-auto search-form\"\n        >\n          <input\n            className=\"form-control mr-sm-2\"\n            type=\"search\"\n            placeholder=\"Search\"\n            aria-label=\"Search\"\n            maxLength=\"20\"\n            name=\"searchQuery\"\n            onChange={this.onChange}\n          />\n          <button\n            className=\"btn btn-outline-success my-2 my-sm-0 search-button\"\n            type=\"submit\"\n          >\n            Search\n          </button>\n        </form>\n        <div className=\"image-outer-container my-1 my-sm-2 my-md-3 my-lg-4\">\n          <InfiniteScroll\n            dataLength={this.state.pixabayAPIResult.length}\n            next={this.fetchData}\n            hasMore={true}\n            loader={<Loading />}\n            endMessage={\n              <p style={{ textAlign: \"center\" }}>\n                <b>Yay! You have seen it all</b>\n              </p>\n            }\n          >\n            <UnsplashImages unsplashImages={this.state.unsplashAPIResult} />\n            <PixabayImages pixabayImages={this.state.pixabayAPIResult} />\n          </InfiniteScroll>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Images;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Images from './components/layout/Images'\nfunction App() {\n  return (\n    <div className=\"App container\">\n      <Navbar />\n      <Images />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}